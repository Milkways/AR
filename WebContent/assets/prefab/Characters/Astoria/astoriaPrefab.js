
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.0 (Phaser v2.6.2)


/**
 * astoriaPrefab.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function astoriaPrefab(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _grp_Astoria = this.game.add.group(this);
	_grp_Astoria.scale.setTo(0.35, 0.35);
	
	var _skin_0 = this.game.add.sprite(135.0, 141.0, 'AstoriaAtlas', 'astoria_idle_equip1', _grp_Astoria);
	_skin_0.anchor.setTo(0.5, 0.5);
	_skin_0.animations.add('idle', ['astoria_idle_equip1', 'astoria_idle_equip2', 'astoria_idle_equip3', 'astoria_idle_equip4'], 5, true);
	
	var __grp_Bow = this.game.add.group(_grp_Astoria);
	__grp_Bow.position.setTo(135.0, 141.0);
	
	var _bow_3 = this.game.add.sprite(-24.0, 14.0, 'Graham', 'bow_anim1', __grp_Bow);
	_bow_3.anchor.setTo(0.5, 0.5);
	_bow_3.animations.add('idle', ['bow_anim1', 'bow_anim2'], 4, true);
	
	var _bow_2 = this.game.add.sprite(-21.0, 10.0, 'RiggAtlas', 'Bow_anim1', __grp_Bow);
	_bow_2.anchor.setTo(0.5, 0.5);
	_bow_2.animations.add('idle', ['Bow_anim1', 'Bow_anim2'], 5, true);
	
	var _bow_1 = this.game.add.sprite(-24.0, 14.0, 'OliverAtlas', 'oliver_equip_bow1', __grp_Bow);
	_bow_1.anchor.setTo(0.5, 0.5);
	_bow_1.animations.add('idle', ['oliver_equip_bow1', 'oliver_equip_bow2'], 5, true);
	
	var _bow_0 = this.game.add.sprite(-20.0, 10.0, 'AstoriaAtlas', 'bow_idle_equip1', __grp_Bow);
	_bow_0.anchor.setTo(0.5, 0.5);
	_bow_0.animations.add('idle', ['bow_idle_equip1', 'bow_idle_equip2'], 5, true);
	
	var _hand_0 = this.game.add.sprite(99.0, 171.0, 'AstoriaAtlas', 'hand_idle_equip1', _grp_Astoria);
	_hand_0.anchor.setTo(0.5, 0.5);
	_hand_0.animations.add('idle', ['hand_idle_equip1', 'hand_idle_equip2', 'hand_idle_equip3', 'hand_idle_equip4'], 5, true);
	
	
	
	// public fields
	
	this.fGrp_Astoria = _grp_Astoria;
	this.fSkin_0 = _skin_0;
	this.fBow_3 = _bow_3;
	this.fBow_2 = _bow_2;
	this.fBow_1 = _bow_1;
	this.fBow_0 = _bow_0;
	this.fHand_0 = _hand_0;
	
	this.Create()
	
}

/** @type Phaser.Group */
var astoriaPrefab_proto = Object.create(Phaser.Group.prototype);
astoriaPrefab.prototype = astoriaPrefab_proto;
astoriaPrefab.prototype.constructor = astoriaPrefab;

/* --- end generated code --- */
// -- user code here --
astoriaPrefab.prototype.Create = function(){
	this.bows = new Array();
	this.bows.push(this.fBow_0);
	this.bows.push(this.fBow_1);
	this.bows.push(this.fBow_2);
	this.bows.push(this.fBow_3);
	this.currentBow = 0;
	this.showCurretBow(localData.currentBow);
	
}
astoriaPrefab.prototype.visibleBow = function(visible){
	for(var i =0 ;i<this.bows.length ;i++){
		this.bows[i].visible = visible;
	}
}

astoriaPrefab.prototype.showCurretBow = function(currentBow){
	this.visibleBow(false);
	this.bows[currentBow].visible = true;
	this.currentBow = currentBow;
	this.playAnimation();
	
}


astoriaPrefab.prototype.playAnimation = function(){
	this.fSkin_0.animations.play("idle",2);
	this.bows[this.currentBow].animations.play("idle",2);
	this.fHand_0.animations.play("idle",2);
}

astoriaPrefab.prototype.Scale = function(scale){
	this.fGrp_Astoria.scale.setTo(scale);
}

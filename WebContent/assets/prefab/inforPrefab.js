
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.0 (Phaser v2.6.2)


/**
 * inforPrefab.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function inforPrefab(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _bg_infor = this.game.add.sprite(0.0, 66.0, 'bg_infor', null, this);
	_bg_infor.scale.setTo(1.0, 1.1);
	
	var _item_bow_frame = this.game.add.group(this);
	_item_bow_frame.position.setTo(0.0, 70.0);
	
	var _skin_bow_frame = this.game.add.group(this);
	_skin_bow_frame.position.setTo(0.0, 50.0);
	
	var _avatar_frame = this.game.add.sprite(39.0, 211.0, 'EnvironmentAtlas', 'avatar frame', this);
	_avatar_frame.scale.setTo(0.8, 0.8);
	
	var _item_skin = this.game.add.sprite(-15.0, 303.0, 'HUD2Atlas', 'shop_menu', this);
	_item_skin.scale.setTo(1.3, 1.3);
	
	var _item_bow = this.game.add.sprite(533.0, 313.0, 'HUD2Atlas', 'shop_menu', this);
	_item_bow.scale.setTo(1.3, 1.3);
	
	var _btn_skin_item = this.game.add.sprite(-18.0, 336.0, 'HUD2Atlas', 'button', this);
	_btn_skin_item.scale.setTo(1.5, 1.0);
	
	var _btn_bow_item = this.game.add.sprite(532.0, 336.0, 'HUD2Atlas', 'button', this);
	_btn_bow_item.scale.setTo(1.5, 1.0);
	
	var _avatar_bar = this.game.add.sprite(-5.0, 155.0, 'EnvironmentAtlas', 'avatar bar', this);
	_avatar_bar.scale.setTo(1.05, 0.6);
	
	var _player_Infor = this.game.add.group(this);
	_player_Infor.position.setTo(0.0, 70.0);
	
	var _Level_Bar_ = this.game.add.sprite(59.0, 220.0, 'HUDAtlas', 'Level_Bar_1', _player_Infor);
	_Level_Bar_.scale.setTo(0.8, 0.8);
	
	var _Level_Bar_1 = this.game.add.sprite(59.0, 220.0, 'HUDAtlas', 'Level_Bar_2', _player_Infor);
	_Level_Bar_1.scale.setTo(0.8, 0.8);
	
	var _BT_level = this.game.add.sprite(33.0, 211.0, 'HUDAtlas', 'BT_level', _player_Infor);
	_BT_level.scale.setTo(0.9, 0.9);
	
	var _txt_bow = this.game.add.text(63.0, 289.0, 'BOW', {"font":"bold 32px Arial","fill":"#ffffff"}, _player_Infor);
	_txt_bow.anchor.setTo(0.5, 0.0);
	
	var _txt_skin = this.game.add.text(35.0, 289.0, 'SKIN', {"font":"bold 32px Arial","fill":"#ffffff"}, _player_Infor);
	_txt_skin.anchor.setTo(0.5, 0.0);
	
	var _profile_Picture = this.game.add.sprite(101.0, 155.0, 'profile_sample', null, _player_Infor);
	_profile_Picture.anchor.setTo(0.5, 0.5);
	
	var _txt_score_high = this.game.add.text(625.0, 142.0, '20', {"font":"bold 25px Arial","fill":"#fefb00"}, _player_Infor);
	
	var _txt_score_current = this.game.add.text(449.0, 142.0, '20', {"font":"bold 25px Arial","fill":"#ffffff"}, _player_Infor);
	
	var _txt_headShot_high = this.game.add.text(624.0, 176.0, '10', {"font":"bold 25px Arial","fill":"#fefb00"}, _player_Infor);
	
	var _txt_headShot_current = this.game.add.text(448.0, 176.0, '5', {"font":"bold 25px Arial","fill":"#ffffff"}, _player_Infor);
	
	var _txt_efficiency_high = this.game.add.text(623.0, 216.0, '30%', {"font":"bold 25px Arial","fill":"#fefb00"}, _player_Infor);
	
	var _txt_efficiency_current = this.game.add.text(446.0, 216.0, '15%', {"font":"bold 25px Arial","fill":"#ffffff"}, _player_Infor);
	
	var _txt_efficiency = this.game.add.text(235.0, 218.0, 'Efficiency', {"font":"bold 25px Arial","fill":"#ffffff"}, _player_Infor);
	
	var _txt_headShot = this.game.add.text(235.0, 176.0, 'Headshot', {"font":"bold 25px Arial","fill":"#ffffff"}, _player_Infor);
	
	var _txt_score = this.game.add.text(235.0, 142.0, 'Score', {"font":"bold 25px Arial","fill":"#ffffff"}, _player_Infor);
	
	var _txt_high = this.game.add.text(618.0, 110.0, 'High', {"font":"bold 25px Arial","fill":"#fefb00"}, _player_Infor);
	
	var _txt_current = this.game.add.text(417.0, 107.0, 'Current', {"font":"bold 25px Arial","fill":"#ffffff"}, _player_Infor);
	
	var _txt_LevelIndex = this.game.add.text(55.0, 218.0, '10', {"font":"bold 25px Arial","fill":"#feffff"}, _player_Infor);
	_txt_LevelIndex.anchor.setTo(0.5, 0.0);
	
	var _txt_facebookID = this.game.add.text(1097.0, 80.0, '123456789', {"font":"bold 30px Arial","fill":"#ffffff"}, _player_Infor);
	
	this.game.add.text(1005.0, 163.0, 'User ID:', {"font":"bold 30px Arial","fill":"#ffffff"}, _player_Infor);
	
	var _txt_Level = this.game.add.text(989.0, 82.0, 'Level', {"font":"bold 25px Arial","fill":"#fefb00"}, _player_Infor);
	
	var _txt_nameFacebook = this.game.add.text(972.0, 0.0, 'Hai Dang', {"font":"bold 30px Arial","fill":"#ffffff"}, _player_Infor);
	
	var _txt_player_Infor_Title = this.game.add.text(185.0, 17.0, 'PLAYER INFO', {"font":"bold 55px Arial","fill":"#ffffff"}, _player_Infor);
	_txt_player_Infor_Title.anchor.setTo(0.5, 0.0);
	
	var _btn_close = this.game.add.button(632.0, 19.0, 'HUDAtlas', null, this, null, 'close button', null, null, _player_Infor);
	
	this.game.add.sprite(-953.0, 623.0, 'HUD2Atlas', 'item_frame', this);
	
	var __grp_Character = this.game.add.group(this);
	
	var __grp_Skin = this.game.add.group(__grp_Character);
	
	var _skin_4 = this.game.add.sprite(353.0, 632.0, 'ItemShop1Atlas', 'skin_04', __grp_Skin);
	_skin_4.scale.setTo(4.0, 4.0);
	_skin_4.anchor.setTo(0.5, 0.5);
	
	var _skin_3 = this.game.add.sprite(219.0, 408.0, 'Graham', 'Graham_equip_anim1', __grp_Skin);
	_skin_3.animations.add('idle', ['Graham_equip_anim1', 'Graham_equip_anim2'], 5, true);
	
	var _skin_2 = this.game.add.sprite(206.0, 413.0, 'RiggAtlas', 'riggs_equip_anim1', __grp_Skin);
	_skin_2.animations.add('idle', ['riggs_equip_anim1', 'riggs_equip_anim2', 'riggs_equip_anim3', 'riggs_equip_anim4'], 5, true);
	
	var _skin_1 = this.game.add.sprite(331.0, 667.0, 'OliverAtlas', 'oliver_equip_anim1', __grp_Skin);
	_skin_1.anchor.setTo(0.5, 0.5);
	_skin_1.animations.add('idle', ['oliver_equip_anim1', 'oliver_equip_anim2', 'oliver_equip_anim3', 'oliver_equip_anim4'], 5, true);
	
	var _skin_0 = this.game.add.sprite(244.0, 417.0, 'AstoriaAtlas', 'astoria_idle_equip1', __grp_Skin);
	_skin_0.animations.add('idle', ['astoria_idle_equip1', 'astoria_idle_equip2', 'astoria_idle_equip3', 'astoria_idle_equip4'], 5, true);
	
	var __grp_Bow = this.game.add.group(__grp_Character);
	__grp_Bow.position.setTo(-1085.0, 1138.0);
	
	var _bow_3 = this.game.add.sprite(1385.0, -432.0, 'Graham', 'bow_anim1', __grp_Bow);
	_bow_3.anchor.setTo(0.5, 0.5);
	_bow_3.animations.add('idle', ['bow_anim1', 'bow_anim2'], 4, true);
	
	var _bow_2 = this.game.add.sprite(1391.0, -435.0, 'RiggAtlas', 'Bow_anim1', __grp_Bow);
	_bow_2.anchor.setTo(0.5, 0.5);
	_bow_2.animations.add('idle', ['Bow_anim1', 'Bow_anim2'], 5, true);
	
	var _bow_1 = this.game.add.sprite(1389.0, -435.0, 'OliverAtlas', 'oliver_equip_bow1', __grp_Bow);
	_bow_1.anchor.setTo(0.5, 0.5);
	_bow_1.animations.add('idle', ['oliver_equip_bow1', 'oliver_equip_bow2'], 5, true);
	
	var _bow_0 = this.game.add.sprite(1388.0, -440.0, 'AstoriaAtlas', 'bow_idle_equip1', __grp_Bow);
	_bow_0.anchor.setTo(0.5, 0.5);
	_bow_0.animations.add('idle', ['bow_idle_equip1', 'bow_idle_equip2'], 5, true);
	
	var __grp_Hand = this.game.add.group(__grp_Character);
	__grp_Hand.position.setTo(438.0, 667.0);
	
	var _skin_ = this.game.add.sprite(353.0, 632.0, 'ItemShop1Atlas', 'skin_04', __grp_Hand);
	_skin_.scale.setTo(4.0, 4.0);
	_skin_.anchor.setTo(0.5, 0.5);
	
	var _hand_3 = this.game.add.sprite(-208.0, -80.0, 'Graham', 'Graham_hand_anim1', __grp_Hand);
	_hand_3.animations.add('idle', ['Graham_hand_anim1', 'Graham_hand_anim2'], 4, true);
	
	var _hand_2 = this.game.add.sprite(-215.0, -184.0, 'RiggAtlas', 'riggs_hand_anim1', __grp_Hand);
	_hand_2.animations.add('idle', ['riggs_hand_anim1', 'riggs_hand_anim2', 'riggs_hand_anim1', 'riggs_hand_anim2'], 5, true);
	
	var _hand_1 = this.game.add.sprite(-136.0, 53.0, 'OliverAtlas', 'oliver_equip_hand1', __grp_Hand);
	_hand_1.anchor.setTo(0.5, 0.5);
	_hand_1.animations.add('idle', ['oliver_equip_hand1', 'oliver_equip_hand2', 'oliver_equip_hand3', 'oliver_equip_hand4'], 60, true);
	
	var _hand_0 = this.game.add.sprite(-175.0, -59.0, 'AstoriaAtlas', 'hand_idle_equip1', __grp_Hand);
	_hand_0.animations.add('idle', ['hand_idle_equip1', 'hand_idle_equip2', 'hand_idle_equip3', 'hand_idle_equip4'], 5, true);
	
	var __grp_Skin_Icon = this.game.add.group(this);
	
	var _skin_icon_4 = this.game.add.sprite(-1030.0, 731.0, 'ItemShop1Atlas', 'skin_04', __grp_Skin_Icon);
	_skin_icon_4.scale.setTo(0.5, 0.5);
	_skin_icon_4.anchor.setTo(0.5, 0.5);
	
	var _skin_icon_3 = this.game.add.sprite(-956.0, 788.0, 'ItemShop1Atlas', 'skin_03', __grp_Skin_Icon);
	_skin_icon_3.scale.setTo(0.5, 0.5);
	_skin_icon_3.anchor.setTo(0.5, 0.5);
	
	var _skin_icon_2 = this.game.add.sprite(-917.0, 627.0, 'ItemShop1Atlas', 'skin_02', __grp_Skin_Icon);
	_skin_icon_2.scale.setTo(0.5, 0.5);
	_skin_icon_2.anchor.setTo(0.5, 0.5);
	
	var _skin_icon_1 = this.game.add.sprite(-1034.0, 644.0, 'ItemShop1Atlas', 'skin_01', __grp_Skin_Icon);
	_skin_icon_1.scale.setTo(0.5, 0.5);
	_skin_icon_1.anchor.setTo(0.5, 0.5);
	
	var _skin_icon_0 = this.game.add.sprite(-1109.0, 647.0, 'characterAtlas', 'player_idle', __grp_Skin_Icon);
	_skin_icon_0.scale.setTo(0.8, 0.8);
	_skin_icon_0.anchor.setTo(0.5, 0.5);
	
	var __grp_Bow_Icon = this.game.add.group(this);
	__grp_Bow_Icon.position.setTo(79.0, 817.0);
	
	var _bow_icon_3 = this.game.add.sprite(-1127.0, 223.0, 'ItemShop1Atlas', 'bow_03', __grp_Bow_Icon);
	_bow_icon_3.angle = 45.0;
	_bow_icon_3.anchor.setTo(0.5, 0.5);
	
	var _bow_icon_2 = this.game.add.sprite(-1549.0, 132.0, 'ItemShop1Atlas', 'bow_01', __grp_Bow_Icon);
	_bow_icon_2.angle = 45.0;
	_bow_icon_2.scale.setTo(0.15, 0.15);
	_bow_icon_2.anchor.setTo(0.5, 0.5);
	
	var _bow_icon_1 = this.game.add.sprite(1431.0, -430.0, 'ItemShop1Atlas', 'bow_02', __grp_Bow_Icon);
	_bow_icon_1.angle = 45.0;
	_bow_icon_1.scale.setTo(0.15, 0.15);
	_bow_icon_1.anchor.setTo(0.5, 0.5);
	
	var __grp_Skin_Item = this.game.add.group(this);
	
	var _txt_buy_Success = this.game.add.text(178.0, 854.0, 'Buy Success', {"font":"bold 37px Arial","fill":"#fefb00"}, this);
	_txt_buy_Success.anchor.setTo(0.5, 0.0);
	
	var _menu_BG = this.game.add.sprite(0.0, 1009.0, 'menu BG', null, this);
	_menu_BG.scale.setTo(1.0, 0.5);
	
	
	
	// public fields
	
	this.fBg_infor = _bg_infor;
	this.fItem_bow_frame = _item_bow_frame;
	this.fSkin_bow_frame = _skin_bow_frame;
	this.fBtn_skin_item = _btn_skin_item;
	this.fBtn_bow_item = _btn_bow_item;
	this.fLevel_Bar_1 = _Level_Bar_1;
	this.fTxt_bow = _txt_bow;
	this.fTxt_skin = _txt_skin;
	this.fProfile_Picture = _profile_Picture;
	this.fTxt_score_high = _txt_score_high;
	this.fTxt_score_current = _txt_score_current;
	this.fTxt_headShot_high = _txt_headShot_high;
	this.fTxt_headShot_current = _txt_headShot_current;
	this.fTxt_efficiency_high = _txt_efficiency_high;
	this.fTxt_efficiency_current = _txt_efficiency_current;
	this.fTxt_efficiency = _txt_efficiency;
	this.fTxt_headShot = _txt_headShot;
	this.fTxt_score = _txt_score;
	this.fTxt_high = _txt_high;
	this.fTxt_current = _txt_current;
	this.fTxt_LevelIndex = _txt_LevelIndex;
	this.fTxt_facebookID = _txt_facebookID;
	this.fTxt_Level = _txt_Level;
	this.fTxt_nameFacebook = _txt_nameFacebook;
	this.fTxt_player_Infor_Title = _txt_player_Infor_Title;
	this.fBtn_close = _btn_close;
	this.fSkin_4 = _skin_4;
	this.fSkin_3 = _skin_3;
	this.fSkin_2 = _skin_2;
	this.fSkin_1 = _skin_1;
	this.fSkin_0 = _skin_0;
	this.fBow_3 = _bow_3;
	this.fBow_2 = _bow_2;
	this.fBow_1 = _bow_1;
	this.fBow_0 = _bow_0;
	this.fSkin_ = _skin_;
	this.fHand_3 = _hand_3;
	this.fHand_2 = _hand_2;
	this.fHand_1 = _hand_1;
	this.fHand_0 = _hand_0;
	this.fSkin_icon_4 = _skin_icon_4;
	this.fSkin_icon_3 = _skin_icon_3;
	this.fSkin_icon_2 = _skin_icon_2;
	this.fSkin_icon_1 = _skin_icon_1;
	this.fSkin_icon_0 = _skin_icon_0;
	this.fBow_icon_3 = _bow_icon_3;
	this.fBow_icon_2 = _bow_icon_2;
	this.fBow_icon_1 = _bow_icon_1;
	this.f_grp_Skin_Item = __grp_Skin_Item;
	this.fTxt_buy_Success = _txt_buy_Success;
	
	this.Create();
	
}

/** @type Phaser.Group */
var inforPrefab_proto = Object.create(Phaser.Group.prototype);
inforPrefab.prototype = inforPrefab_proto;
inforPrefab.prototype.constructor = inforPrefab;

/* --- end generated code --- */
// -- user code here --
inforPrefab.prototype.Create = function(){

 	  this.character_bow_position='{"astoria":{"Astoria_Bow_X":"1408.0","Astoria_Bow_Y":"-489.0","Oliver_Bow_X":"1412.0","Oliver_Bow_Y":"-487.0","Rigg_Bow_X":"1416.0","Rigg_Bow_Y":"-490.0","Graham_Bow_X":"1412.0","Graham_Bow_Y":"-489.0"},"oliver":{"Astoria_Bow_X":"1385.0","Astoria_Bow_Y":"-417.0","Oliver_Bow_X":"1384.0","Oliver_Bow_Y":"-413.0","Rigg_Bow_X":"1382.0","Rigg_Bow_Y":"-413.0","Graham_Bow_X":"1379.0","Graham_Bow_Y":"-413.0"},"rigg":{"Astoria_Bow_X":"1376.0","Astoria_Bow_Y":"-433.0","Oliver_Bow_X":"1379.0","Oliver_Bow_Y":"-427.0","Rigg_Bow_X":"1376.0","Rigg_Bow_Y":"-426.0","Graham_Bow_X":"1375.0","Graham_Bow_Y":"-424.0"},"graham":{"Astoria_Bow_X":"1388.0","Astoria_Bow_Y":"-440.0","Oliver_Bow_X":"1389.0","Oliver_Bow_Y":"-435.0","Rigg_Bow_X":"1391.0","Rigg_Bow_Y":"-435.0","Graham_Bow_X":"1385.0","Graham_Bow_Y":"-432.0"}}';
	  this.jsonCharacterBowPosition = JSON.parse(this.character_bow_position);
	 this.jsonTemp = this.jsonCharacterBowPosition.astoria;
    this.fillAmountLevel = 0;

	this.updateTextAlignCenter();
 	this.fBtn_close.onInputUp.add(this.onEventCloseShop,this);
	
	this.skinFrames = new Array();
	this.bowFrames = new Array();
	
	this.bowIconInventory =new Array();
	this.skinIconInventory =new Array();

	this.bowsAvatar =new Array();
	this.skinsAvatar =new Array();
	this.handAvatar = new Array();

	//Add Hand Avatar
	this.handAvatar.push(this.fHand_0);
	this.handAvatar.push(this.fHand_1);
	this.handAvatar.push(this.fHand_2);
	this.handAvatar.push(this.fHand_3);
	//Add Bow Avatar
	this.bowsAvatar.push(this.fBow_0);
	this.bowsAvatar.push(this.fBow_1);
	this.bowsAvatar.push(this.fBow_2);
	this.bowsAvatar.push(this.fBow_3);
	
	//Add Skin Avatar
	this.skinsAvatar.push(this.fSkin_0);
	this.skinsAvatar.push(this.fSkin_1);
	this.skinsAvatar.push(this.fSkin_2);
	this.skinsAvatar.push(this.fSkin_3);
	this.skinsAvatar.push(this.fSkin_4);
	

	
	//Add Position Begin
	for(var i = 0;i<this.bowIconInventory.length;i++){
		this.positionXBowIconInventory.push(this.bowIconInventory[i].x);
		this.positionYBowIconInventory.push(this.bowIconInventory[i].y);
	}
	
	for(var i = 0;i<this.skinIconInventory.length;i++){
		this.positionXSkinIconInventory.push(this.skinIconInventory[i].x);
		this.positionYSkinIconInventory.push(this.skinIconInventory[i].y);
	}
	this.hideAllBow();
	this.hideAllSkin();
	this.visibileItemIcon(false);


	//Show Skin current
	if(localData.currentSkin === undefined ||localData.currentSkin === null) localData.currentSkin = 0;
		this.showCurrentSkin(localData.currentSkin);
	//Show Bow current
	if(localData.currentBow === undefined||localData.currentBow ===null) localData.currentBow = 0;
	this.showCurrentBow(localData.currentBow);

	
	
	 
	this.skinIndex = new Array();
	this.bowIndex = new Array();
	 
	
	
	this.fTxt_buy_Success.visible  = false;
	
	
	//Add Skin Icon
	this.skinIconInventory.push(this.fSkin_icon_0);
	this.skinIconInventory.push(this.fSkin_icon_1);
	this.skinIconInventory.push(this.fSkin_icon_2);
	this.skinIconInventory.push(this.fSkin_icon_3);
	this.skinIconInventory.push(this.fSkin_icon_4);
	
	
	// cost of skin item
	this.costSkinItems = new Array();
	this.costSkinItems.push(0); //Skin default
	this.costSkinItems.push(5000);
	this.costSkinItems.push(10000);
	this.costSkinItems.push(15000);
	this.costSkinItems.push(20000);

	// cost of bow item
	this.costbowItems = new Array();
	this.costbowItems.push(0); //bow default
	this.costbowItems.push(7000);
	this.costbowItems.push(13000);
	this.costbowItems.push(20000);
	
	
	//Skin Item Array
	this.buttonSkinFrame = new Array();
 	this.skinIcons= new Array();
	this.buttonSkinBuy = new Array();
	this.buttonSkinSprite = new Array();
	this.skinCoins = new Array();
	this.skinTextCoinValue = new Array();
	
	//Bow Item Array
	this.buttonBowFrame = new Array();
 	this.bowIcons= new Array();
	this.buttonBowBuy = new Array();
	this.buttonBowSprite = new Array();
	this.bowCoins = new Array();
	this.bowTextCoinValue = new Array();
	
	
	this.createBowItem();
	this.createSkinItem();
	
	this.loadItem();
	this.levelHandler();
}


inforPrefab.prototype.levelHandler = function(){

	this.levelManager = new levelManager();

	
	
	if(localData.currentExp === undefined) {localData.currentExp =0;}
	 
	var currentExp  = localData.currentEXP;

	//console.log("currentExp " +currentExp);
	localData.currentLevel = this.levelManager.processLevel(currentExp,localData.currentLevel);
	//get current Level
	var currentLevel   = localData.currentLevel;
//	console.log("currentLevel " +currentLevel);
	//update level text
	this.fTxt_LevelIndex.text =localData.currentLevel;

	//clip rect exp
	var expNextLevel = this.levelManager.expNextLevel(currentLevel) ; 
	var expPrevLevel  = this.levelManager.expNextLevel(currentLevel-1);
	//console.log("expNextLevel " +expNextLevel);
	//console.log("expPrevLevel " +expPrevLevel);
	var expCurrentLevel = expNextLevel - expPrevLevel;
	var expRemain = (expPrevLevel) - currentExp;
	expRemain = (expRemain< 0 ) ? expRemain *-1 :expRemain;
	//console.log("expRemain " +expRemain);
	this.fillAmountLevel =  expRemain/expCurrentLevel ;
	

	//console.log("fillAmount " +this.fillAmountLevel);
	//console.log("Width " +this.fillAmountLevel * this.fLevel_Bar_1.width);


	this.cropRect = new Phaser.Rectangle(0, 0, this.fillAmountLevel * this.fLevel_Bar_1.width, this.fLevel_Bar_1.height);
	
	this.fLevel_Bar_1.crop(this.cropRect);


}
inforPrefab.prototype.createBowItem = function(){
	var distance  = 145;
	for(var i =0 ; i<MAX_BOW_ITEM;i++){
	
	
		var buttonFrame = this.game.add.button(547, (i*distance), 'HUD2Atlas', null, this, null, 'item_frame', null, null, this.f_grp_Skin_Item);
		buttonFrame.scale.setTo(1.35, 1.35);
		buttonFrame.visible = false;
		this.buttonBowFrame.push(buttonFrame);

		
		
		var bow = this.game.add.sprite(336.0, (i*distance), 'ItemShop1Atlas', 'bow_0'+i+'', this.f_grp_Skin_Item);
		bow.scale.setTo(1.35);
		bow.anchor.setTo(0.5, 0.5);
		bow.position.setTo(buttonFrame.x +buttonFrame.width/2  ,buttonFrame.y +buttonFrame.height/2 );
		this.bowIcons.push(bow);
		
		
		
		var buttonSprite =this.game.add.sprite(400, (i*distance), 'HUD2Atlas', 'button_IAP', this.f_grp_Skin_Item);
		buttonSprite.scale.setTo(0.8, 0.8);
		buttonSprite.anchor.setTo(0.5, 0.5);
		buttonSprite.position.setTo(buttonFrame.x +buttonFrame.width/2,buttonFrame.y +buttonFrame.height/2 +40);
		this.buttonBowSprite.push(buttonSprite);
		
		
		var buttonBowBuy =this.game.add.button(400, (i*distance), 'HUD2Atlas', null, this, null, 'item_frame', null, null, this.f_grp_Skin_Item);
		buttonBowBuy.anchor.setTo(0.5, 0.5);
		buttonBowBuy.scale.setTo(1.35, 1.35);
		buttonBowBuy.position.setTo(buttonFrame.x +buttonFrame.width/2,buttonFrame.y +buttonFrame.height/2 );
		this.buttonBowBuy.push(buttonBowBuy);
		
		
		var coin = this.game.add.sprite(400, (i*distance), 'HUDAtlas', 'coin', this.f_grp_Skin_Item);
		coin.scale.setTo(0.4, 0.4);
		coin.position.setTo(buttonFrame.x +buttonFrame.width/2 +20,buttonFrame.y +buttonFrame.height/2 +31);
		this.bowCoins.push(coin);
		
		var textCoinValue = this.game.add.text(400, (i*distance), '10K', {"font":"bold 20px Arial","fill":"#ffffff"}, this.f_grp_Skin_Item);
		textCoinValue.anchor.setTo(0.5, 0.5);
		textCoinValue.position.setTo(buttonFrame.x +buttonFrame.width/2 -5,buttonFrame.y +buttonFrame.height/2 +44);
		textCoinValue.text = (this.costbowItems[i] >=1000) ?(this.costbowItems[i] /1000)+"K":this.costbowItems[i];
		this.bowTextCoinValue.push(textCoinValue);
	}
	
	//Add Event Button Change Bow 
	this.buttonBowFrame[0].onInputUp.add(function() {this.onEventChangeBow(0)},this);
	this.buttonBowFrame[1].onInputUp.add(function() {this.onEventChangeBow(1)},this);
	this.buttonBowFrame[2].onInputUp.add(function() {this.onEventChangeBow(2)},this);
	this.buttonBowFrame[3].onInputUp.add(function() {this.onEventChangeBow(3)},this);
	
	//Add Event Button Buy Bow 
	this.buttonBowBuy[0].onInputUp.add(function() {this.onEventBuyBow(0)},this);
	this.buttonBowBuy[1].onInputUp.add(function() {this.onEventBuyBow(1)},this);
	this.buttonBowBuy[2].onInputUp.add(function() {this.onEventBuyBow(2)},this);
	this.buttonBowBuy[3].onInputUp.add(function() {this.onEventBuyBow(3)},this);
}

inforPrefab.prototype.createSkinItem = function(){
	var distance  = 145;
	for(var i =0 ; i<MAX_SKIN_ITEM;i++){
	
	
		var buttonFrame = this.game.add.button(-2.0, (i*distance), 'HUD2Atlas', null, this, null, 'item_frame', null, null, this.f_grp_Skin_Item);
		buttonFrame.scale.setTo(1.35, 1.35);
		buttonFrame.visible = false;
		this.buttonSkinFrame.push(buttonFrame);
		
		var skin = this.game.add.sprite(336.0,  (i*distance), 'ItemShop1Atlas', 'skin_icon_0'+i+'', this.f_grp_Skin_Item);
		skin.scale.setTo(1.35,1.35);
		skin.anchor.setTo(0.5, 0.5);
		skin.position.setTo(buttonFrame.x +buttonFrame.width/2  ,buttonFrame.y +buttonFrame.height/2 );
		this.skinIcons.push(skin);
		
		var buttonSprite =this.game.add.sprite(-8.0, (i*distance), 'HUD2Atlas', 'button_IAP', this.f_grp_Skin_Item);
		buttonSprite.scale.setTo(0.8, 0.8);
		buttonSprite.anchor.setTo(0.5, 0.5);
		buttonSprite.position.setTo(buttonFrame.x +buttonFrame.width/2,buttonFrame.y +buttonFrame.height/2 +40);
		this.buttonSkinSprite.push(buttonSprite);
		
		
		var buttonSkinBuy =this.game.add.button(-8.0, (i*distance), 'HUD2Atlas', null, this, null, 'item_frame', null, null, this.f_grp_Skin_Item);
		buttonSkinBuy.scale.setTo(1.35, 1.35);
		buttonSkinBuy.anchor.setTo(0.5, 0.5);
		buttonSkinBuy.position.setTo(buttonFrame.x +buttonFrame.width/2,buttonFrame.y +buttonFrame.height/2 );
		this.buttonSkinBuy.push(buttonSkinBuy);
		
		
		var coin = this.game.add.sprite(101.0, (i*distance), 'HUDAtlas', 'coin', this.f_grp_Skin_Item);
		coin.scale.setTo(0.4, 0.4);
		coin.position.setTo(buttonFrame.x +buttonFrame.width/2 +20,buttonFrame.y +buttonFrame.height/2 +28);
		this.skinCoins.push(coin);
		
		var textCoinValue = this.game.add.text(66.0, (i*distance), '10K', {"font":"bold 20px Arial","fill":"#ffffff"}, this.f_grp_Skin_Item);
		textCoinValue.anchor.setTo(0.5, 0.5);
		textCoinValue.position.setTo(buttonFrame.x +buttonFrame.width/2 -5,buttonFrame.y +buttonFrame.height/2 +42);
		textCoinValue.text = (this.costSkinItems[i] >=1000) ?(this.costSkinItems[i] /1000)+"K":this.costSkinItems[i];
		this.skinTextCoinValue.push(textCoinValue);
	}
	
	

	 
	//Add Event Button Change Skin 
	this.buttonSkinFrame[0].onInputUp.add(function() {this.onEventChangeSkin(0)},this);
	this.buttonSkinFrame[1].onInputUp.add(function() {this.onEventChangeSkin(1)},this);
	this.buttonSkinFrame[2].onInputUp.add(function() {this.onEventChangeSkin(2)},this);
	this.buttonSkinFrame[3].onInputUp.add(function() {this.onEventChangeSkin(3)},this);
	this.buttonSkinFrame[4].onInputUp.add(function() {this.onEventChangeSkin(4)},this);
	
	//Add Event Button Buy Skin 
	this.buttonSkinBuy[0].onInputUp.add(function() {this.onEventBuySkin(0)},this);
	this.buttonSkinBuy[1].onInputUp.add(function() {this.onEventBuySkin(1)},this);
	this.buttonSkinBuy[2].onInputUp.add(function() {this.onEventBuySkin(2)},this);
	this.buttonSkinBuy[3].onInputUp.add(function() {this.onEventBuySkin(3)},this);
	this.buttonSkinBuy[4].onInputUp.add(function() {this.onEventBuySkin(4)},this);
}
inforPrefab.prototype.onEventBuyBow = function(bowIndex){

	if (this.isBuyItemNotification)return;
	// check coins
	if (this.checkValueCoins(this.costbowItems[bowIndex])) {
		// Show UI Buy
		level.f_grp_buyNotification.visible = true;
		
		//level.f_grp_itemShop.f_grp_buy_nofti.visible = true;
		//level.f_grp_itemShop.isBuyItemNotification = true;
		level.f_grp_buyNotification.fTxt_value_nofti.text = this.costbowItems[bowIndex];
		level.f_grp_buyNotification.currentValueItem = this.costbowItems[bowIndex];
		level.f_grp_buyNotification.itemType = level.f_grp_buyNotification.ITEMTYPE.BOW;
		level.f_grp_buyNotification.currentItemIndex = bowIndex;
		//level.f_grp_itemShop.f_grp_item_Shop.visible =false;
		
		//level.f_grpInforPrefab.visible =false;
		//level.f_grp_itemShop.visible = true;
		
	}
	else{
		//when not enough coin open shop coin
		level.f_grp_IAP.visible = true;
		this.isBuyItemNotification = true;
	
	}
	
	this.onEventCloseInfor();
}
inforPrefab.prototype.onEventBuySkin = function(skinIndex){
	
	if (this.isBuyItemNotification)return;
	// check coins
	if (this.checkValueCoins(this.costSkinItems[skinIndex])) {
		// Show UI Buy

		level.f_grp_buyNotification.visible = true;
		level.f_grp_buyNotification.fTxt_value_nofti.text = this.costSkinItems[skinIndex];
		level.f_grp_buyNotification.currentValueItem = this.costSkinItems[skinIndex];
		level.f_grp_buyNotification.itemType = level.f_grp_buyNotification.ITEMTYPE.SKIN;
		level.f_grp_buyNotification.currentItemIndex = skinIndex;
		//level.f_grpInforPrefab.visible =false;
		
	
	}
	else{
		//when not enough coin open shop coin
		level.f_grp_IAP.visible = true;
		//level.f_grp_itemShop.visible = false;
		this.isBuyItemNotification = true;
	}
	
	
	this.onEventCloseInfor();
	

}
inforPrefab.prototype.onEventShop = function(){
	level.f_grp_itemShop.visible = true;
	level.f_grpInforPrefab.visible  = false;
	this.onEventCloseInfor();
	
}

inforPrefab.prototype.onEventCloseShop = function(){
		level.f_grpMainMenuPrefab.openWorldMap();
		
		this.onEventCloseInfor();
}


inforPrefab.prototype.loadItem = function(){
	//load Bow Item
	
	if(localData.bowItem!=undefined || localData.bowItem!=null){
		for(var i = 0; i <localData.bowItem.length;i++){
			this.buttonBowFrame[localData.bowItem[i]].visible = true;
			
			this.buttonBowBuy[localData.bowItem[i]].visible = false;
			this.bowTextCoinValue[localData.bowItem[i]].visible = false;
			this.bowCoins[localData.bowItem[i]].visible = false;
			this.buttonBowSprite[localData.bowItem[i]].visible = false;
			this.buttonBowBuy[localData.bowItem[i]].events.onInputUp.removeAll();
		}
	}
	
	//Load Skin Item
	if(localData.skinItem!=undefined || localData.skinItem!=null){
		for(var i = 0; i <localData.skinItem.length;i++){
			this.buttonSkinFrame[localData.skinItem[i]].visible = true;
			
			this.buttonSkinBuy[localData.skinItem[i]].visible = false;
			this.skinTextCoinValue[localData.skinItem[i]].visible = false;
			this.skinCoins[localData.skinItem[i]].visible = false;
			this.buttonSkinSprite[localData.skinItem[i]].visible = false;
			this.buttonSkinBuy[localData.skinItem[i]].events.onInputUp.removeAll();
			
		}
	}

	
	//Skin Default
	this.buttonSkinFrame[0].visible = true;
	this.buttonSkinBuy[0].visible = false;
	this.buttonSkinSprite[0].visible = false;
	this.skinTextCoinValue[0].visible = false;
	this.skinCoins[0].visible = false;
	
	
	//Bow Default
	this.buttonBowFrame[0].visible = true;
	this.buttonBowBuy[0].visible = false;
	this.bowTextCoinValue[0].visible = false;
	this.bowCoins[0].visible = false;
	this.buttonBowSprite[0].visible = false;
}



inforPrefab.prototype.onEventOpenInfor = function(){

	this.scrollBowIconUI(true);
	this.scrollSkinIconUI(true);
	
	this.loadItem();

	this.scrollerBowItem.start();
	this.scrollerSkinItem.start();
	this.scrollerBowItem.PressedDown(false);
	this.scrollerSkinItem.PressedDown(false);
}

inforPrefab.prototype.onEventCloseInfor = function(){

	if(this.scrollerSkinItem !=undefined){
		//console.log("Kill");
		this.scrollerSkinItem.stop();
		this.scrollerSkinItem.kill();
	}
	if(this.scrollerBowItem !=undefined){
		//console.log("Kill");
		this.scrollerBowItem.stop();
		this.scrollerBowItem.kill();
	}
	this.visibileBowInventory(false);
	this.visibileSkinInventory(false);

	GlobalSetting.currentMenuState = MENUSTATE.WORLDMAP ;
}
inforPrefab.prototype.onEventChangeBow = function(bowIndex){
	
	this.hideAllBow();

	this.showCurrentSkin(localData.currentSkin);
	this.showCurrentBow(bowIndex);
	
	localData.currentBow  = bowIndex;
	
	//save Data
	level.saveData();
}


inforPrefab.prototype.onEventChangeSkin = function(skinIndex){
	this.hideAllSkin();

	localData.currentSkin  = skinIndex;
	this.showCurrentSkin(skinIndex);
	this.showCurrentBow(localData.currentBow);
	//save Data
	level.saveData();
}

inforPrefab.prototype.visibileBowInventory = function(visible){
	for(var i =0 ;i<this.buttonBowFrame.length;i++){
		this.buttonBowFrame[i].visible = visible;
		}
 
	for(var i =0 ;i<this.bowIcons.length;i++){
		this.bowIcons[i].visible = visible;
		}
	for(var i =0 ;i<this.buttonBowBuy.length;i++){
		this.buttonBowBuy[i].visible = visible;
		}
	for(var i =0 ;i<this.bowCoins.length;i++){
		this.bowCoins[i].visible = visible;
		}
	for(var i =0 ;i<this.bowTextCoinValue.length;i++){
		this.bowTextCoinValue[i].visible = visible;
		}
	for(var i =0 ;i<this.buttonBowSprite.length;i++){
		this.buttonBowSprite[i].visible = visible;
		}
}
inforPrefab.prototype.visibileSkinInventory = function(visible){
	
	

	
	for(var i =0 ;i<this.buttonSkinFrame.length;i++){
		this.buttonSkinFrame[i].visible = visible;
		}

	
	for(var i =0 ;i<this.skinIcons.length;i++){
		this.skinIcons[i].visible = visible;
		}
	
	for(var i =0 ;i<this.buttonSkinBuy.length;i++){
		this.buttonSkinBuy[i].visible = visible;
		}
	
	for(var i =0 ;i<this.skinCoins.length;i++){
		this.skinCoins[i].visible = visible;
		}
	
	for(var i =0 ;i<this.skinTextCoinValue.length;i++){
		this.skinTextCoinValue[i].visible = visible;
		}
	for(var i =0 ;i<this.buttonSkinSprite.length;i++){
		this.buttonSkinSprite[i].visible = visible;
		}

}

inforPrefab.prototype.createBowIconUI = function(visible){

	var distance = 110;
	//Add Bow Icon
	this.bowIconInventory.push(this.fBow_icon_0);
	this.bowIconInventory.push(this.fBow_icon_1);
	this.bowIconInventory.push(this.fBow_icon_2);
	this.bowIconInventory.push(this.fBow_icon_3);
	
	//+1 : for Bow default
	for(var i =0 ;i<MAX_BOW_ITEM+1;i++){

		var bowFramebutton =  this.game.add.button(590  -1.5,    (i* distance) , 'HUD2Atlas', null, this, null, 'item_frame', null, null,  this.fSkin_bow_frame);
		this.bowFrames.push(bowFramebutton);
		bowFramebutton.visible = visible;
		
		this.bowIconInventory[i].x = bowFramebutton.x + bowFramebutton.width/2 ;
		this.bowIconInventory[i].y = bowFramebutton.y + bowFramebutton.height/2 -5;
		this.bowIconInventory[i].visible = visible;
		
	}
	

	//Add Event Button
	this.bowFrames[0].onInputUp.add(function(){ this.onEventChangeBow(0)},this);
	this.bowFrames[1].onInputUp.add(function(){ this.onEventChangeBow(1)},this);
	this.bowFrames[2].onInputUp.add(function(){ this.onEventChangeBow(2)},this);
	this.bowFrames[3].onInputUp.add(function(){ this.onEventChangeBow(3)},this);
	
}

inforPrefab.prototype.visibileItemIcon = function(visible){
	for(var  i=0 ; i<this.bowIconInventory.length;i++){
		this.bowIconInventory[i].visible= visible; 
	}
	
	for(var  i=0 ; i<this.skinIconInventory.length;i++){
		this.skinIconInventory[i].visible= visible; 
	}
}

inforPrefab.prototype.hideAllSkin = function(){
	for(var i= 0;i<this.skinsAvatar.length;i++){
		this.skinsAvatar[i].visible = false;
	}

	for(var i= 0;i<this.handAvatar.length;i++){
		this.handAvatar[i].visible = false;
	}
}

inforPrefab.prototype.hideAllBow = function(){
	//Hide All Bow
	for(var i= 0;i<this.bowsAvatar.length;i++){
		this.bowsAvatar[i].visible = false;
	}
}


inforPrefab.prototype.scrollBowIconUI = function(visible){
	var startY = 410;
	var y = 60;
	
	this.scrollerBowItem = game.add.existing(new ScrollableArea(0, startY, 200, 580, {
		horizontalScroll: false,
		verticalScroll: true,
		timeConstantScroll: 1
	},true,520,0));
	this.scrollerBowItem.inputEnabled = true;
	
	for(var i =0 ;i<MAX_BOW_ITEM;i++){
		this.scrollerBowItem.addChild(this.buttonBowFrame[i]);
 		this.scrollerBowItem.addChild(this.buttonBowBuy[i]);
		this.scrollerBowItem.addChild(this.bowIcons[i]);

		this.scrollerBowItem.addChild(this.buttonBowSprite[i]);
		this.scrollerBowItem.addChild(this.bowCoins[i]);
		this.scrollerBowItem.addChild(this.bowTextCoinValue[i]);
		
	}
	
	this.visibileBowInventory(true);
	
	for(var i =0 ;i<this.buttonBowFrame.length;i++){
		this.buttonBowFrame[i].visible = false;
		}
	
}
inforPrefab.prototype.scrollSkinIconUI = function(visible){
	var startY = 410;
	var y = 60;
	var distance = 110;
	this.scrollerSkinItem = game.add.existing(new ScrollableArea(0, startY, 200, 580, {
		horizontalScroll: false,
		verticalScroll: true,
		timeConstantScroll: 1
	},true,0,0));
	
	this.scrollerSkinItem.inputEnabled = true;
	
	
	//+1 : for Skin default
	for(var i =0 ;i< MAX_SKIN_ITEM  ;i++){

		this.scrollerSkinItem.addChild(this.buttonSkinFrame[i]);
 		this.scrollerSkinItem.addChild(this.buttonSkinBuy[i]);
		this.scrollerSkinItem.addChild(this.skinIcons[i]);
		this.scrollerSkinItem.addChild(this.buttonSkinSprite[i]);
		this.scrollerSkinItem.addChild(this.skinCoins[i]);
		this.scrollerSkinItem.addChild(this.skinTextCoinValue[i]);
	

	}
	
	this.visibileSkinInventory(true);
	for(var i =0 ;i<this.buttonSkinFrame.length;i++){
		this.buttonSkinFrame[i].visible = false;
		}
}
inforPrefab.prototype.createSkinIconUI = function(visible){
	

	var distance = 110;
	

	

	
	//+1 : for Skin default
	for(var i =0 ;i< MAX_SKIN_ITEM +1 ;i++){
		
		var skinFramebutton =  this.game.add.button(12.0 -7,  (i* distance), 'HUD2Atlas', null, this, null, 'item_frame', null, null, this.fSkin_bow_frame);
	
		this.skinFrames.push(skinFramebutton);
		
		skinFramebutton.visible = visible;
		
	
		this.skinIconInventory[i].anchor.setTo(0.5, 0.5);
		this.skinIconInventory[i].visible = visible;
		this.skinIconInventory[i].x = skinFramebutton.x + skinFramebutton.width/2 ;
		this.skinIconInventory[i].y = skinFramebutton.y + skinFramebutton.height/2 -5;
		

	}
	//Add Event Button
	this.skinFrames[0].onInputUp.add(function(){ this.onEventChangeSkin(0)},this);
	this.skinFrames[1].onInputUp.add(function(){ this.onEventChangeSkin(1)},this);
	this.skinFrames[2].onInputUp.add(function(){ this.onEventChangeSkin(2)},this);
	this.skinFrames[3].onInputUp.add(function(){ this.onEventChangeSkin(3)},this);
	this.skinFrames[4].onInputUp.add(function(){ this.onEventChangeSkin(4)},this);
	
	

}

inforPrefab.prototype.updateInformation = function(score,headShot,efficiency){
	
	this.fProfile_Picture.loadTexture("profilePicture");
	this.fProfile_Picture.width = 95;
	this.fProfile_Picture.height = 95;
	//if(localData.FacebookID!=null ||localData.FacebookID !=undefined)
	//this.fTxt_facebookID.text = localData.FacebookID;
	if(game.PlayFab.settings.PlayFabId!=null ||game.PlayFab.settings.PlayFabId !=undefined)
	this.fTxt_facebookID.text = game.PlayFab.settings.PlayFabId;
	
	console.log("localData.currentLevel " + localData.currentLevel);
	this.fTxt_LevelIndex.text = localData.currentLevel;
	this.fTxt_nameFacebook.text = facebookStuff.name ;
	this.fTxt_headShot_current.text = headShot;
	this.fTxt_headShot_high.text =localData.BestHeadShot;
	this.fTxt_score_current.text = score;
	this.fTxt_score_high.text = localData.BestScore;
	this.fTxt_efficiency_current.text  = efficiency +"%";
	this.fTxt_efficiency_high.text = localData.BestEfficiency+"%";
}

inforPrefab.prototype.checkValueCoins = function(value) {

	if (localData.coins >= value)
		return true;
	return false;
}


inforPrefab.prototype.showCurrentBow = function(currentBow) {
	//Bow Avatar
	this.bowsAvatar[currentBow].visible =true;
	
	if(this.bowsAvatar[currentBow].animations!=undefined){
		console.log("currentBow" +this.bowsAvatar[currentBow].animations);
		this.bowsAvatar[currentBow].animations.stop();
		this.bowsAvatar[currentBow].animations.play('idle',2);
	}
	switch(currentBow){
		case 0:
		//Bow Astoria
		this.bowsAvatar[currentBow].position.setTo(this.jsonTemp.Astoria_Bow_X,this.jsonTemp.Astoria_Bow_Y);
		break;
		case 1:
		//Bow Oliver
		this.bowsAvatar[currentBow].position.setTo(this.jsonTemp.Oliver_Bow_X,this.jsonTemp.Oliver_Bow_Y);
		break;
		case 2:
		//Bow Rigg
		this.bowsAvatar[currentBow].position.setTo(this.jsonTemp.Rigg_Bow_X,this.jsonTemp.Rigg_Bow_Y);
		break;
		case 3:
		//Bow Graham
		this.bowsAvatar[currentBow].position.setTo(this.jsonTemp.Graham_Bow_X,this.jsonTemp.Graham_Bow_Y);
		break;
	}


}

inforPrefab.prototype.showCurrentSkin = function(currentSkin) {
	//Skin Avatar
	this.skinsAvatar[currentSkin].visible =true;
	if(this.skinsAvatar[currentSkin].animations!=undefined){
		this.skinsAvatar[currentSkin].animations.stop();
		this.skinsAvatar[currentSkin].animations.play('idle',2);
	}
	//Hand
	if(this.handAvatar[currentSkin]!=undefined){
		this.handAvatar[currentSkin].visible =true;
		if(this.handAvatar[currentSkin].animations!=undefined){
			this.handAvatar[currentSkin].animations.stop();
			this.handAvatar[currentSkin].animations.play('idle',2);
		}
	}

	if(level!=undefined){
		//Load Skin In World Map
		level.f_grpWorldMapScene.loadSkin(currentSkin);
	}
	switch(currentSkin){
		case 0:
		//Astoria
		this.jsonTemp = this.jsonCharacterBowPosition.astoria;
		break;
		case 1:
		//Oliver
		this.jsonTemp = this.jsonCharacterBowPosition.oliver;
		break;
		case 2:
		//Rigg
		this.jsonTemp = this.jsonCharacterBowPosition.rigg;
		break;
		case 3:
		//Rigg
		this.jsonTemp = this.jsonCharacterBowPosition.graham;
		break;
	}
	
}

inforPrefab.prototype.updateTextAlignCenter = function(){
	
	this.fTxt_bow.x = this.fBtn_bow_item.x +this.fBtn_bow_item.width/2-5;
	this.fTxt_skin.x = this.fBtn_skin_item.x +this.fBtn_skin_item.width/2-5;
	this.fTxt_player_Infor_Title.x = this.fBg_infor.x +this.fBg_infor.width/2;
	this.fTxt_buy_Success.x = this.fBg_infor.x +this.fBg_infor.width/2;
}





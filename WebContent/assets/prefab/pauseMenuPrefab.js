
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.0 (Phaser v2.6.2)


/**
 * pauseMenuPrefab.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function pauseMenuPrefab(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _grp_Pause = this.game.add.group(this);
	
	var _pause_BG = this.game.add.sprite(25.0, 288.0, 'menu BG', null, _grp_Pause);
	_pause_BG.scale.setTo(0.9, 0.3);
	
	var _btn_resume = this.game.add.button(84.0, 379.0, 'HUDAtlas', null, this, null, 'bt_resumeon', null, null, _grp_Pause);
	_btn_resume.scale.setTo(1.2, 1.2);
	
	var _txt_gamePause_title = this.game.add.text(342.0, 313.0, 'GAME PAUSE', {"font":"bold 40px Arial","fill":"#feffff"}, _grp_Pause);
	_txt_gamePause_title.anchor.setTo(0.5, 0.0);
	
	var _btn_goHome = this.game.add.button(402.0, 373.0, 'HUDAtlas', null, this, null, 'BT_Home_On', null, null, _grp_Pause);
	_btn_goHome.scale.setTo(1.2, 1.2);
	
	var _btn_pause = this.game.add.button(587.0, 1088.0, 'HUDAtlas', null, this, null, 'bt_pause', null, null, this);
	
	
	
	// public fields
	
	this.fGrp_Pause = _grp_Pause;
	this.fPause_BG = _pause_BG;
	this.fBtn_resume = _btn_resume;
	this.fTxt_gamePause_title = _txt_gamePause_title;
	this.fBtn_goHome = _btn_goHome;
	this.fBtn_pause = _btn_pause;
	
	this.Create();
	
}

/** @type Phaser.Group */
var pauseMenuPrefab_proto = Object.create(Phaser.Group.prototype);
pauseMenuPrefab.prototype = pauseMenuPrefab_proto;
pauseMenuPrefab.prototype.constructor = pauseMenuPrefab;

/* --- end generated code --- */
// -- user code here --
pauseMenuPrefab.prototype.Create =  function(){
	
	this.updateTextAlignCenter();

	this.fBtn_goHome.onInputUp.add(this.onEventGoHome,this);
	this.fBtn_resume.onInputUp.add(this.onEventResume,this);
	this.fBtn_pause.onInputUp.add(this.onEventPause,this);
	this.fBtn_pause.onInputDown.add(this.onEventDownPause,this);
	this.fGrp_Pause.visible = false;
}

pauseMenuPrefab.prototype.onEventGoHome = function(){
		GlobalSetting.pauseGame = false;
		arrowEnemy = undefined;
		arrowPlayer = undefined;
		game.state.start("Level");

}

pauseMenuPrefab.prototype.onEventResume = function(){
	//when press button resume 
	level.isCancelClick =false;

	this.fGrp_Pause.visible = false;
	GlobalSetting.pauseGame = false;


	level.resumeVeclocityPlayer();
	level.resumeVeclocityEnemy();
	level.game.physics.arcade.gravity.y = level.GRAVITY_FORCE_EASY_MODE;
	level.hideArrowPauseGame(false);
}

pauseMenuPrefab.prototype.onEventDownPause = function(){
	//when press button pause no shoot arrow
	level.isCancelClick =true;

}
pauseMenuPrefab.prototype.onEventPause = function(){


	this.fGrp_Pause.visible = true;
	GlobalSetting.pauseGame = true;

	
	level.hideArrowPauseGame(true);
	level.game.physics.arcade.gravity.y = 0;
}

pauseMenuPrefab.prototype.updateTextAlignCenter = function(){
	this.fTxt_gamePause_title.x = this.fPause_BG.x +this.fPause_BG.width/2;
	
}
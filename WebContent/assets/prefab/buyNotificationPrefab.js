
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.0 (Phaser v2.6.2)


/**
 * buyNotificationPrefab.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function buyNotificationPrefab(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var __grp_buy_Nofti = this.game.add.group(this);
	
	var _BG_not_enough_gems = this.game.add.sprite(17.0, 490.0, 'EnvironmentAtlas', 'avatar bar', __grp_buy_Nofti);
	
	var _btn_buy = this.game.add.button(301.0, 669.0, 'HUDAtlas', null, this, null, 'button 02', null, null, __grp_buy_Nofti);
	_btn_buy.scale.setTo(0.7, 0.75);
	
	var _btn_cancel_buy = this.game.add.button(47.0, 687.0, 'HUDAtlas', null, this, null, 'button 02', null, null, __grp_buy_Nofti);
	_btn_cancel_buy.scale.setTo(0.45, 0.45);
	
	var _txt_buy_nofti = this.game.add.text(147.0, 610.0, 'Are you sure ?', {"font":"bold 35px Arial","fill":"#ffffff"}, __grp_buy_Nofti);
	_txt_buy_nofti.anchor.setTo(0.5, 0.0);
	
	var _txt_buy_btn = this.game.add.text(203.0, 694.0, 'Yes', {"font":"bold 35px Arial","fill":"#ffffff"}, __grp_buy_Nofti);
	_txt_buy_btn.anchor.setTo(0.5, 0.0);
	
	var _txt_cancel_btn = this.game.add.text(521.0, 694.0, 'No', {"font":"bold 35px Arial","fill":"#ffffff"}, __grp_buy_Nofti);
	_txt_cancel_btn.anchor.setTo(0.5, 0.0);
	
	var _txt_cost_nofti = this.game.add.text(290.0, 546.0, 'Cost : ', {"font":"bold 35px Arial","fill":"#ffffff"}, __grp_buy_Nofti);
	_txt_cost_nofti.anchor.setTo(0.5, 0.0);
	
	var _coin = this.game.add.sprite(444.0, 544.0, 'HUDAtlas', 'coin', __grp_buy_Nofti);
	_coin.scale.setTo(0.8, 0.8);
	
	var _txt_value_nofti = this.game.add.text(392.0, 546.0, 'Cost : ', {"font":"bold 35px Arial","fill":"#ffffff"}, __grp_buy_Nofti);
	_txt_value_nofti.anchor.setTo(0.5, 0.0);
	
	
	
	// public fields
	
	this.fGroup = this;
	this.f_grp_buy_Nofti = __grp_buy_Nofti;
	this.fBG_not_enough_gems = _BG_not_enough_gems;
	this.fBtn_buy = _btn_buy;
	this.fBtn_cancel_buy = _btn_cancel_buy;
	this.fTxt_buy_nofti = _txt_buy_nofti;
	this.fTxt_buy_btn = _txt_buy_btn;
	this.fTxt_cancel_btn = _txt_cancel_btn;
	this.fTxt_cost_nofti = _txt_cost_nofti;
	this.fTxt_value_nofti = _txt_value_nofti;
	
	this.Create();
	
}

/** @type Phaser.Group */
var buyNotificationPrefab_proto = Object.create(Phaser.Group.prototype);
buyNotificationPrefab.prototype = buyNotificationPrefab_proto;
buyNotificationPrefab.prototype.constructor = buyNotificationPrefab;

/* --- end generated code --- */
// -- user code here --
buyNotificationPrefab.prototype.Create = function(){
		this.ITEMTYPE = {
			SKIN:0,
			BOW:1,
	}
	this.itemType = this.ITEMTYPE.SKIN;

	this.currentValueItem  = -1;
	this.currentItemIndex = -1;
	//Event buy Item
	this.fBtn_buy.onInputUp.add(this.onEventBuyItem,this);

	this.fBtn_cancel_buy.onInputUp.add(this.onEventCancelBuy, this);
	this.updateTextAlignCenter();
}

buyNotificationPrefab.prototype.onEventBuyItem = function() {
	//down coin and save data
	localData.coins -= this.currentValueItem   ; 
	//update coin value to main menu 
	level.f_grpMainMenuPrefab.updateGemCoin(localData.gems,localData.coins);

	if(this.itemType === this.ITEMTYPE.SKIN){
		if(localData.skinItem ===undefined) localData.skinItem =new Array();
		console.log("currentItemIndex " +this.currentItemIndex);
		localData.skinItem.push(this.currentItemIndex);
		//this.buttonSkinGroups[this.currentItemIndex].visible = false;
	}
	else if(this.itemType === this.ITEMTYPE.BOW){
		if(localData.bowItem ===undefined) localData.bowItem =new Array();
		console.log("currentItemIndex " +this.currentItemIndex);
		localData.bowItem.push(this.currentItemIndex);
		//this.buttonBowGroups[this.currentItemIndex].visible = false;
	}
	
	//buy success
	level.f_grpInforPrefab.visible = true;
	level.f_grp_buyNotification.visible = false;
	//this.f_grp_buy_success_nofti.visible = false;
	//this.isBuyItemNotification = false;
	//this.f_grp_item_Shop.visible =false;
	//this.f_grp_buy_nofti.visible = false;
 
	  level.f_grpInforPrefab.fTxt_buy_Success.visible = true;
	  setTimeout(function () {
		 
		  level.f_grpInforPrefab.fTxt_buy_Success.visible = false;
	    },3000);
	
	//save data
	level.saveData();
	
	level.f_grpInforPrefab.onEventOpenInfor();
	//Load Item
	level.f_grpInforPrefab.loadItem();
	
	
}

buyNotificationPrefab.prototype.onEventCancelBuy = function() {
	level.f_grp_buyNotification.visible = false;
	level.f_grpInforPrefab.visible = true;
	level.f_grpInforPrefab.onEventOpenInfor();
 
	
}

buyNotificationPrefab.prototype.updateTextAlignCenter = function() {

	 	console.log("IN  updateTextAlignCenter");

	this.fTxt_buy_nofti.x = this.fBG_not_enough_gems.x+ this.fBG_not_enough_gems.width / 2;
	this.fTxt_buy_btn.x = this.fBtn_buy.x + this.fBtn_buy.width / 2;
	this.fTxt_cancel_btn.x = this.fBtn_cancel_buy.x + this.fBtn_cancel_buy.width / 2;
}
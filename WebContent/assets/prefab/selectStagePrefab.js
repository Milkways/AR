
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.0 (Phaser v2.6.2)


/**
 * selectStagePrefab.
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Phaser.Group} aParent The parent Group (or other {@link DisplayObject}) that this group will be added to.
    If undefined/unspecified the Group will be added to the {@link Phaser.Game#world Game World}; if null the Group will not be added to any parent.
 * @param {string} aName A name for this group. Not used internally but useful for debugging.
 * @param {boolean} aAddToStage If true this group will be added directly to the Game.Stage instead of Game.World.
 * @param {boolean} aEnableBody If true all Sprites created with {@link #create} or {@link #createMulitple} will have a physics body created on them. Change the body type with {@link #physicsBodyType}.
 * @param {number} aPhysicsBodyType The physics body type to use when physics bodies are automatically added. See {@link #physicsBodyType} for values.
 */
function selectStagePrefab(aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType) {
	
	Phaser.Group.call(this, aGame, aParent, aName, aAddToStage, aEnableBody, aPhysicsBodyType);
	var _popup_Target = this.game.add.sprite(0.0, 110.0, 'popup_Target', null, this);
	
	var _txt_stage_title = this.game.add.text(329.0, 143.0, 'STAGE', {"font":"bold 50px Arial","fill":"#feffff"}, this);
	_txt_stage_title.anchor.setTo(0.5, 0.0);
	
	var _txt_stage_index = this.game.add.text(456.0, 143.0, '01', {"font":"bold 50px Arial","fill":"#feffff"}, this);
	_txt_stage_index.anchor.setTo(0.5, 0.0);
	
	var _star_off = this.game.add.sprite(172.0, 384.0, 'HUD2Atlas', 'star_off', this);
	_star_off.angle = -45.0;
	_star_off.scale.setTo(1.5, 1.5);
	_star_off.anchor.setTo(0.5, 0.5);
	
	var _star_off1 = this.game.add.sprite(363.0, 319.0, 'HUD2Atlas', 'star_off', this);
	_star_off1.scale.setTo(1.5, 1.5);
	_star_off1.anchor.setTo(0.5, 0.5);
	
	var _star_off2 = this.game.add.sprite(552.0, 386.0, 'HUD2Atlas', 'star_off', this);
	_star_off2.angle = 45.0;
	_star_off2.scale.setTo(1.5, 1.5);
	_star_off2.anchor.setTo(0.5, 0.5);
	
	var _star_0 = this.game.add.sprite(172.0, 384.0, 'HUD2Atlas', 'star', this);
	_star_0.angle = -45.0;
	_star_0.scale.setTo(1.5, 1.5);
	_star_0.anchor.setTo(0.5, 0.5);
	
	var _star_1 = this.game.add.sprite(363.0, 319.0, 'HUD2Atlas', 'star', this);
	_star_1.scale.setTo(1.5, 1.5);
	_star_1.anchor.setTo(0.5, 0.5);
	
	var _star_2 = this.game.add.sprite(552.0, 386.0, 'HUD2Atlas', 'star', this);
	_star_2.angle = 45.0;
	_star_2.scale.setTo(1.5, 1.5);
	_star_2.anchor.setTo(0.5, 0.5);
	
	var _btn_playSingle = this.game.add.button(185.0, 948.0, 'HUDAtlas', null, this, null, 'bt_playduel', null, null, this);
	
	this.game.add.sprite(18.0, 580.0, 'popup_Target_2', null, this);
	
	var _txt_target_title = this.game.add.text(359.0, 485.0, 'TARGET', {"font":"bold 50px Arial","fill":"#0096ff"}, this);
	_txt_target_title.anchor.setTo(0.5, 0.0);
	
	var _txt_play_title = this.game.add.text(361.0, 983.0, 'PLAY', {"font":"bold 50px Arial","fill":"#feffff"}, this);
	_txt_play_title.anchor.setTo(0.5, 0.0);
	
	var _txt_target = this.game.add.text(366.0, 711.0, 'Kill 10 enemy', {"font":"bold 50px Arial","fill":"#feffff"}, this);
	_txt_target.anchor.setTo(0.5, 0.0);
	
	var _btn_close_popUp = this.game.add.button(646.0, 122.0, 'HUDAtlas', null, this, null, 'close button', null, null, this);
	
	
	
	// public fields
	
	this.fGroup = this;
	this.fPopup_Target = _popup_Target;
	this.fTxt_stage_title = _txt_stage_title;
	this.fTxt_stage_index = _txt_stage_index;
	this.fStar_0 = _star_0;
	this.fStar_1 = _star_1;
	this.fStar_2 = _star_2;
	this.fBtn_playSingle = _btn_playSingle;
	this.fTxt_target_title = _txt_target_title;
	this.fTxt_play_title = _txt_play_title;
	this.fTxt_target = _txt_target;
	this.fBtn_close_popUp = _btn_close_popUp;
	
	this.Create();
	
}

/** @type Phaser.Group */
var selectStagePrefab_proto = Object.create(Phaser.Group.prototype);
selectStagePrefab.prototype = selectStagePrefab_proto;
selectStagePrefab.prototype.constructor = selectStagePrefab;

/* --- end generated code --- */
// -- user code here --
selectStagePrefab.prototype.Create = function(){
	this.stars = new Array();
	this.stars.push(this.fStar_0);
	this.stars.push(this.fStar_1);
	this.stars.push(this.fStar_2);

	for(var i = 0 ;i<this.stars.length;i++){
		this.stars[i].visible = false;
	}

	this.fBtn_playSingle.onInputUp.add(this.onEventPlay,this);
	this.fBtn_close_popUp.onInputUp.add(this.onEventClosePopup,this);

	this.updateTextAlignCenter();
}

selectStagePrefab.prototype.showPopup = function(pointIndex){
	for(var i = 0 ;i<this.stars.length;i++){
		this.stars[i].visible = false;
	}


	for(var i = 0 ;i<localData.starInStages[pointIndex];i++){
		this.stars[i].visible = true;
	}
	pointIndex = pointIndex+1;
	this.fTxt_stage_index.text = (pointIndex<=9)? "0"+pointIndex : pointIndex;
}

selectStagePrefab.prototype.onEventPlay = function(){
	userType = USERTYPE.MASTER;
	level.onPlayClick();
	level.f_grpMap.visible   =true;
	level.f_grpMap.showMap(4);
	level.setPlayMode(PLAYMODE.SINGLE);
	playMode = PLAYMODE.SINGLE;
	level.f_grp_SelectStagePrefab.visible  = false;
	
}

selectStagePrefab.prototype.onEventClosePopup = function(){
	level.f_grp_SelectStagePrefab.visible  = false;
	level.f_grpWorldMapScene.startScroll()
	level.f_grpMainMenuPrefab.visibleButtonHome(true);
	level.f_grpMainMenuPrefab.visibleButtonControl(true);
}

selectStagePrefab.prototype.updateTextAlignCenter = function(){
	this.fTxt_play_title.x = this.fBtn_playSingle.x +this.fBtn_playSingle.width/2;
	this.fTxt_target.x = this.fPopup_Target.x +this.fPopup_Target.width/2;
	this.fTxt_target_title.x = this.fPopup_Target.x +this.fPopup_Target.width/2;
}